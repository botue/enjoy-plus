{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n// 封装小程序网络请求 api\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// 记录 loading 的状态\nconst loadingQueue = [];\nconst http = (params, options = { showLoading: true }) => {\n    // 处理基础路径\n    if (!params.url.startsWith('http') && http.baseURL) {\n        params.url = http.baseURL + params.url;\n    }\n    // 调用拦截器处理请求数据\n    params = http.intercept.request(params);\n    // 记录请求开始的次量\n    loadingQueue.push('loading');\n    // 是否显示加载 loading\n    if (options.showLoading && loadingQueue.length)\n        wx.showLoading(http.loading);\n    // 包装 Promise 对象\n    return new Promise((resolve, reject) => {\n        // 调用小程序 api\n        wx.request(Object.assign(Object.assign({}, params), { success: (result) => {\n                // 调用拦截器处理响应数据\n                resolve(http.intercept.response(result));\n            }, fail: reject, complete: () => {\n                // 记录结束的请求数量\n                loadingQueue.pop();\n                // 关闭加载提示框\n                if (!loadingQueue.length)\n                    wx.hideLoading();\n            } }));\n    });\n};\n// 基础路径\n// http.baseURL = 'https://yapi.itheima.net/mock/30'\nhttp.loading = {\n    title: '正在加载...',\n    mask: true,\n};\n// 默认拦截器（什么都没做）\nhttp.intercept = {\n    request: (params) => params,\n    response: (result) => result,\n};\nhttp.get = (url, data) => {\n    return http({\n        url,\n        data,\n        method: 'GET',\n    });\n};\nhttp.post = (url, data) => {\n    return http({\n        url,\n        data,\n        method: 'POST',\n    });\n};\nexports.default = http;\n"]}